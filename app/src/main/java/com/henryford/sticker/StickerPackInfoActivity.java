/* * Copyright (c) WhatsApp Inc. and its affiliates. * All rights reserved. * * This source code is licensed under the BSD-style license found in the * LICENSE file in the root directory of this source tree. */package com.henryford.sticker;import android.content.Intent;import android.graphics.Rect;import android.graphics.drawable.BitmapDrawable;import android.graphics.drawable.Drawable;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.TextView;import androidx.annotation.DrawableRes;import java.io.FileNotFoundException;import java.io.InputStream;public class StickerPackInfoActivity extends BaseActivity {    private static final String TAG = "StickerPackInfoActivity";    private TextView trayIcon;    private TextView viewWebpage;    private TextView sendEmail;    private TextView viewPrivacyPolicy;    @Override    protected void setListener() {    }    @Override    protected void initData() {        final String trayIconUriString = getIntent().getStringExtra(StickerPackDetailsActivity.EXTRA_STICKER_PACK_TRAY_ICON);        final String website = getIntent().getStringExtra(StickerPackDetailsActivity.EXTRA_STICKER_PACK_WEBSITE);        final String email = getIntent().getStringExtra(StickerPackDetailsActivity.EXTRA_STICKER_PACK_EMAIL);        final String privacyPolicy = getIntent().getStringExtra(StickerPackDetailsActivity.EXTRA_STICKER_PACK_PRIVACY_POLICY);        try {            final InputStream inputStream = getContentResolver().openInputStream(Uri.parse(trayIconUriString));            final BitmapDrawable trayDrawable = new BitmapDrawable(getResources(), inputStream);            final Drawable emailDrawable = getDrawableForAllAPIs(R.drawable.sticker_3rdparty_email);            trayDrawable.setBounds(new Rect(0, 0, emailDrawable.getIntrinsicWidth(), emailDrawable.getIntrinsicHeight()));            trayIcon.setCompoundDrawables(trayDrawable, null, null, null);        } catch (FileNotFoundException e) {            Log.e(TAG, "could not find the uri for the tray image:" + trayIconUriString);        }        if (TextUtils.isEmpty(website)) {            viewWebpage.setVisibility(View.GONE);        } else {            viewWebpage.setOnClickListener(v -> launchWebpage(website));        }        if (TextUtils.isEmpty(email)) {            sendEmail.setVisibility(View.GONE);        } else {            sendEmail.setOnClickListener(v -> launchEmailClient(email));        }        if (TextUtils.isEmpty(privacyPolicy)) {            viewPrivacyPolicy.setVisibility(View.GONE);        } else {            viewPrivacyPolicy.setOnClickListener(v -> launchWebpage(privacyPolicy));        }    }    @Override    protected void initView() {        trayIcon = findViewById(R.id.tray_icon);        viewWebpage = findViewById(R.id.view_webpage);        sendEmail = findViewById(R.id.send_email);        viewPrivacyPolicy = findViewById(R.id.privacy_policy);    }    @Override    protected int getLayoutResId() {        return R.layout.activity_sticker_pack_info;    }    private void launchEmailClient(String email) {        Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(                "mailto", email, null));        emailIntent.putExtra(Intent.EXTRA_EMAIL, new String[]{email});        startActivity(Intent.createChooser(emailIntent, getResources().getString(R.string.info_send_email_to_prompt)));    }    private void launchWebpage(String website) {        Uri uri = Uri.parse(website);        Intent intent = new Intent(Intent.ACTION_VIEW, uri);        startActivity(intent);    }    private Drawable getDrawableForAllAPIs(@DrawableRes int id) {        if (Build.VERSION.SDK_INT >= 21) {            return getDrawable(id);        } else {            return getResources().getDrawable(id);        }    }    @Override    public void initToolbar() {    }}